// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: contestant/v1/viewer.proto

package contestantv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Viewer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Viewer) Reset() {
	*x = Viewer{}
	mi := &file_contestant_v1_viewer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Viewer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewer) ProtoMessage() {}

func (x *Viewer) ProtoReflect() protoreflect.Message {
	mi := &file_contestant_v1_viewer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewer.ProtoReflect.Descriptor instead.
func (*Viewer) Descriptor() ([]byte, []int) {
	return file_contestant_v1_viewer_proto_rawDescGZIP(), []int{0}
}

func (x *Viewer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetViewerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewerRequest) Reset() {
	*x = GetViewerRequest{}
	mi := &file_contestant_v1_viewer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewerRequest) ProtoMessage() {}

func (x *GetViewerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contestant_v1_viewer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewerRequest.ProtoReflect.Descriptor instead.
func (*GetViewerRequest) Descriptor() ([]byte, []int) {
	return file_contestant_v1_viewer_proto_rawDescGZIP(), []int{1}
}

type GetViewerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Viewer        *Viewer                `protobuf:"bytes,1,opt,name=viewer,proto3" json:"viewer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetViewerResponse) Reset() {
	*x = GetViewerResponse{}
	mi := &file_contestant_v1_viewer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetViewerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetViewerResponse) ProtoMessage() {}

func (x *GetViewerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contestant_v1_viewer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetViewerResponse.ProtoReflect.Descriptor instead.
func (*GetViewerResponse) Descriptor() ([]byte, []int) {
	return file_contestant_v1_viewer_proto_rawDescGZIP(), []int{2}
}

func (x *GetViewerResponse) GetViewer() *Viewer {
	if x != nil {
		return x.Viewer
	}
	return nil
}

var File_contestant_v1_viewer_proto protoreflect.FileDescriptor

var file_contestant_v1_viewer_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x06, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x32, 0x5f, 0x0a, 0x0d, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x63, 0x74, 0x73, 0x63, 0x2f, 0x69, 0x63, 0x74, 0x73,
	0x63, 0x2d, 0x72, 0x65, 0x67, 0x61, 0x6c, 0x69, 0x61, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contestant_v1_viewer_proto_rawDescOnce sync.Once
	file_contestant_v1_viewer_proto_rawDescData = file_contestant_v1_viewer_proto_rawDesc
)

func file_contestant_v1_viewer_proto_rawDescGZIP() []byte {
	file_contestant_v1_viewer_proto_rawDescOnce.Do(func() {
		file_contestant_v1_viewer_proto_rawDescData = protoimpl.X.CompressGZIP(file_contestant_v1_viewer_proto_rawDescData)
	})
	return file_contestant_v1_viewer_proto_rawDescData
}

var file_contestant_v1_viewer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contestant_v1_viewer_proto_goTypes = []any{
	(*Viewer)(nil),            // 0: contestant.v1.Viewer
	(*GetViewerRequest)(nil),  // 1: contestant.v1.GetViewerRequest
	(*GetViewerResponse)(nil), // 2: contestant.v1.GetViewerResponse
}
var file_contestant_v1_viewer_proto_depIdxs = []int32{
	0, // 0: contestant.v1.GetViewerResponse.viewer:type_name -> contestant.v1.Viewer
	1, // 1: contestant.v1.ViewerService.GetViewer:input_type -> contestant.v1.GetViewerRequest
	2, // 2: contestant.v1.ViewerService.GetViewer:output_type -> contestant.v1.GetViewerResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_contestant_v1_viewer_proto_init() }
func file_contestant_v1_viewer_proto_init() {
	if File_contestant_v1_viewer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contestant_v1_viewer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contestant_v1_viewer_proto_goTypes,
		DependencyIndexes: file_contestant_v1_viewer_proto_depIdxs,
		MessageInfos:      file_contestant_v1_viewer_proto_msgTypes,
	}.Build()
	File_contestant_v1_viewer_proto = out.File
	file_contestant_v1_viewer_proto_rawDesc = nil
	file_contestant_v1_viewer_proto_goTypes = nil
	file_contestant_v1_viewer_proto_depIdxs = nil
}
