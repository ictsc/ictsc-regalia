// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: admin/v1/mark.proto

package adminv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarkingResultVisibility int32

const (
	MarkingResultVisibility_MARKING_RESULT_VISIBILITY_UNSPECIFIED MarkingResultVisibility = 0
	// 参加者に見える
	MarkingResultVisibility_MARKING_RESULT_VISIBILITY_PUBLIC MarkingResultVisibility = 1
	// 参加者に見えない
	MarkingResultVisibility_MARKING_RESULT_VISIBILITY_PRIVATE MarkingResultVisibility = 2
)

// Enum value maps for MarkingResultVisibility.
var (
	MarkingResultVisibility_name = map[int32]string{
		0: "MARKING_RESULT_VISIBILITY_UNSPECIFIED",
		1: "MARKING_RESULT_VISIBILITY_PUBLIC",
		2: "MARKING_RESULT_VISIBILITY_PRIVATE",
	}
	MarkingResultVisibility_value = map[string]int32{
		"MARKING_RESULT_VISIBILITY_UNSPECIFIED": 0,
		"MARKING_RESULT_VISIBILITY_PUBLIC":      1,
		"MARKING_RESULT_VISIBILITY_PRIVATE":     2,
	}
)

func (x MarkingResultVisibility) Enum() *MarkingResultVisibility {
	p := new(MarkingResultVisibility)
	*p = x
	return p
}

func (x MarkingResultVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarkingResultVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_v1_mark_proto_enumTypes[0].Descriptor()
}

func (MarkingResultVisibility) Type() protoreflect.EnumType {
	return &file_admin_v1_mark_proto_enumTypes[0]
}

func (x MarkingResultVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarkingResultVisibility.Descriptor instead.
func (MarkingResultVisibility) EnumDescriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{0}
}

// 解答
type Answer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Team          *Team                  `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Author        *Contestant            `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Problem       *Problem               `protobuf:"bytes,4,opt,name=problem,proto3" json:"problem,omitempty"`
	Body          *AnswerBody            `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Score         *MarkingScore          `protobuf:"bytes,7,opt,name=score,proto3,oneof" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Answer) Reset() {
	*x = Answer{}
	mi := &file_admin_v1_mark_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{0}
}

func (x *Answer) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Answer) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Answer) GetAuthor() *Contestant {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Answer) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

func (x *Answer) GetBody() *AnswerBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Answer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Answer) GetScore() *MarkingScore {
	if x != nil {
		return x.Score
	}
	return nil
}

type AnswerBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  ProblemType            `protobuf:"varint,1,opt,name=type,proto3,enum=admin.v1.ProblemType" json:"type,omitempty"`
	// Types that are valid to be assigned to Body:
	//
	//	*AnswerBody_Descriptive
	Body          isAnswerBody_Body `protobuf_oneof:"body"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnswerBody) Reset() {
	*x = AnswerBody{}
	mi := &file_admin_v1_mark_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerBody) ProtoMessage() {}

func (x *AnswerBody) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerBody.ProtoReflect.Descriptor instead.
func (*AnswerBody) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{1}
}

func (x *AnswerBody) GetType() ProblemType {
	if x != nil {
		return x.Type
	}
	return ProblemType_PROBLEM_TYPE_UNSPECIFIED
}

func (x *AnswerBody) GetBody() isAnswerBody_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *AnswerBody) GetDescriptive() *DescriptiveAnswer {
	if x != nil {
		if x, ok := x.Body.(*AnswerBody_Descriptive); ok {
			return x.Descriptive
		}
	}
	return nil
}

type isAnswerBody_Body interface {
	isAnswerBody_Body()
}

type AnswerBody_Descriptive struct {
	Descriptive *DescriptiveAnswer `protobuf:"bytes,2,opt,name=descriptive,proto3,oneof"`
}

func (*AnswerBody_Descriptive) isAnswerBody_Body() {}

type DescriptiveAnswer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          string                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescriptiveAnswer) Reset() {
	*x = DescriptiveAnswer{}
	mi := &file_admin_v1_mark_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescriptiveAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptiveAnswer) ProtoMessage() {}

func (x *DescriptiveAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptiveAnswer.ProtoReflect.Descriptor instead.
func (*DescriptiveAnswer) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{2}
}

func (x *DescriptiveAnswer) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

// 採点結果
type MarkingResult struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            string                  `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	Answer        *Answer                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Judge         *Admin                  `protobuf:"bytes,2,opt,name=judge,proto3" json:"judge,omitempty"`
	Score         uint32                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Rationale     *MarkingRationale       `protobuf:"bytes,4,opt,name=rationale,proto3" json:"rationale,omitempty"`
	CreatedAt     *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Visibility    MarkingResultVisibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=admin.v1.MarkingResultVisibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkingResult) Reset() {
	*x = MarkingResult{}
	mi := &file_admin_v1_mark_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkingResult) ProtoMessage() {}

func (x *MarkingResult) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkingResult.ProtoReflect.Descriptor instead.
func (*MarkingResult) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{3}
}

func (x *MarkingResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MarkingResult) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *MarkingResult) GetJudge() *Admin {
	if x != nil {
		return x.Judge
	}
	return nil
}

func (x *MarkingResult) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *MarkingResult) GetRationale() *MarkingRationale {
	if x != nil {
		return x.Rationale
	}
	return nil
}

func (x *MarkingResult) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MarkingResult) GetVisibility() MarkingResultVisibility {
	if x != nil {
		return x.Visibility
	}
	return MarkingResultVisibility_MARKING_RESULT_VISIBILITY_UNSPECIFIED
}

type MarkingScore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Marked        uint32                 `protobuf:"varint,2,opt,name=marked,proto3" json:"marked,omitempty"`
	Penalty       uint32                 `protobuf:"varint,3,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Max           uint32                 `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkingScore) Reset() {
	*x = MarkingScore{}
	mi := &file_admin_v1_mark_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkingScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkingScore) ProtoMessage() {}

func (x *MarkingScore) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkingScore.ProtoReflect.Descriptor instead.
func (*MarkingScore) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{4}
}

func (x *MarkingScore) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MarkingScore) GetMarked() uint32 {
	if x != nil {
		return x.Marked
	}
	return 0
}

func (x *MarkingScore) GetPenalty() uint32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *MarkingScore) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type MarkingRationale struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  ProblemType            `protobuf:"varint,1,opt,name=type,proto3,enum=admin.v1.ProblemType" json:"type,omitempty"`
	// Types that are valid to be assigned to Body:
	//
	//	*MarkingRationale_Descriptive
	Body          isMarkingRationale_Body `protobuf_oneof:"body"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkingRationale) Reset() {
	*x = MarkingRationale{}
	mi := &file_admin_v1_mark_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkingRationale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkingRationale) ProtoMessage() {}

func (x *MarkingRationale) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkingRationale.ProtoReflect.Descriptor instead.
func (*MarkingRationale) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{5}
}

func (x *MarkingRationale) GetType() ProblemType {
	if x != nil {
		return x.Type
	}
	return ProblemType_PROBLEM_TYPE_UNSPECIFIED
}

func (x *MarkingRationale) GetBody() isMarkingRationale_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MarkingRationale) GetDescriptive() *DescriptiveMarkingRationale {
	if x != nil {
		if x, ok := x.Body.(*MarkingRationale_Descriptive); ok {
			return x.Descriptive
		}
	}
	return nil
}

type isMarkingRationale_Body interface {
	isMarkingRationale_Body()
}

type MarkingRationale_Descriptive struct {
	Descriptive *DescriptiveMarkingRationale `protobuf:"bytes,2,opt,name=descriptive,proto3,oneof"`
}

func (*MarkingRationale_Descriptive) isMarkingRationale_Body() {}

type DescriptiveMarkingRationale struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       string                 `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescriptiveMarkingRationale) Reset() {
	*x = DescriptiveMarkingRationale{}
	mi := &file_admin_v1_mark_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescriptiveMarkingRationale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptiveMarkingRationale) ProtoMessage() {}

func (x *DescriptiveMarkingRationale) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptiveMarkingRationale.ProtoReflect.Descriptor instead.
func (*DescriptiveMarkingRationale) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{6}
}

func (x *DescriptiveMarkingRationale) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ListAnswersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 採点が完了した提出を含めるかどうか
	IncludeMarked bool `protobuf:"varint,1,opt,name=include_marked,json=includeMarked,proto3" json:"include_marked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnswersRequest) Reset() {
	*x = ListAnswersRequest{}
	mi := &file_admin_v1_mark_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnswersRequest) ProtoMessage() {}

func (x *ListAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnswersRequest.ProtoReflect.Descriptor instead.
func (*ListAnswersRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{7}
}

func (x *ListAnswersRequest) GetIncludeMarked() bool {
	if x != nil {
		return x.IncludeMarked
	}
	return false
}

type ListAnswersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answers       []*Answer              `protobuf:"bytes,1,rep,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAnswersResponse) Reset() {
	*x = ListAnswersResponse{}
	mi := &file_admin_v1_mark_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAnswersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnswersResponse) ProtoMessage() {}

func (x *ListAnswersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnswersResponse.ProtoReflect.Descriptor instead.
func (*ListAnswersResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{8}
}

func (x *ListAnswersResponse) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type GetAnswerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamCode      uint32                 `protobuf:"varint,1,opt,name=team_code,json=teamCode,proto3" json:"team_code,omitempty"`
	ProblemCode   string                 `protobuf:"bytes,2,opt,name=problem_code,json=problemCode,proto3" json:"problem_code,omitempty"`
	Id            uint32                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnswerRequest) Reset() {
	*x = GetAnswerRequest{}
	mi := &file_admin_v1_mark_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerRequest) ProtoMessage() {}

func (x *GetAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerRequest.ProtoReflect.Descriptor instead.
func (*GetAnswerRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{9}
}

func (x *GetAnswerRequest) GetTeamCode() uint32 {
	if x != nil {
		return x.TeamCode
	}
	return 0
}

func (x *GetAnswerRequest) GetProblemCode() string {
	if x != nil {
		return x.ProblemCode
	}
	return ""
}

func (x *GetAnswerRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAnswerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        *Answer                `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnswerResponse) Reset() {
	*x = GetAnswerResponse{}
	mi := &file_admin_v1_mark_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResponse) ProtoMessage() {}

func (x *GetAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{10}
}

func (x *GetAnswerResponse) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type ListMarkingResultsRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Visibility    MarkingResultVisibility `protobuf:"varint,1,opt,name=visibility,proto3,enum=admin.v1.MarkingResultVisibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMarkingResultsRequest) Reset() {
	*x = ListMarkingResultsRequest{}
	mi := &file_admin_v1_mark_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMarkingResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarkingResultsRequest) ProtoMessage() {}

func (x *ListMarkingResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarkingResultsRequest.ProtoReflect.Descriptor instead.
func (*ListMarkingResultsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{11}
}

func (x *ListMarkingResultsRequest) GetVisibility() MarkingResultVisibility {
	if x != nil {
		return x.Visibility
	}
	return MarkingResultVisibility_MARKING_RESULT_VISIBILITY_UNSPECIFIED
}

type ListMarkingResultsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MarkingResults []*MarkingResult       `protobuf:"bytes,1,rep,name=marking_results,json=markingResults,proto3" json:"marking_results,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListMarkingResultsResponse) Reset() {
	*x = ListMarkingResultsResponse{}
	mi := &file_admin_v1_mark_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMarkingResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarkingResultsResponse) ProtoMessage() {}

func (x *ListMarkingResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarkingResultsResponse.ProtoReflect.Descriptor instead.
func (*ListMarkingResultsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{12}
}

func (x *ListMarkingResultsResponse) GetMarkingResults() []*MarkingResult {
	if x != nil {
		return x.MarkingResults
	}
	return nil
}

type CreateMarkingResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkingResult *MarkingResult         `protobuf:"bytes,1,opt,name=marking_result,json=markingResult,proto3" json:"marking_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMarkingResultRequest) Reset() {
	*x = CreateMarkingResultRequest{}
	mi := &file_admin_v1_mark_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMarkingResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarkingResultRequest) ProtoMessage() {}

func (x *CreateMarkingResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarkingResultRequest.ProtoReflect.Descriptor instead.
func (*CreateMarkingResultRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMarkingResultRequest) GetMarkingResult() *MarkingResult {
	if x != nil {
		return x.MarkingResult
	}
	return nil
}

type CreateMarkingResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkingResult *MarkingResult         `protobuf:"bytes,1,opt,name=marking_result,json=markingResult,proto3" json:"marking_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMarkingResultResponse) Reset() {
	*x = CreateMarkingResultResponse{}
	mi := &file_admin_v1_mark_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMarkingResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarkingResultResponse) ProtoMessage() {}

func (x *CreateMarkingResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarkingResultResponse.ProtoReflect.Descriptor instead.
func (*CreateMarkingResultResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{14}
}

func (x *CreateMarkingResultResponse) GetMarkingResult() *MarkingResult {
	if x != nil {
		return x.MarkingResult
	}
	return nil
}

// ビジネスロジックに沿って、採点結果の可視性を更新する
type UpdateMarkingResultVisibilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMarkingResultVisibilitiesRequest) Reset() {
	*x = UpdateMarkingResultVisibilitiesRequest{}
	mi := &file_admin_v1_mark_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMarkingResultVisibilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarkingResultVisibilitiesRequest) ProtoMessage() {}

func (x *UpdateMarkingResultVisibilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarkingResultVisibilitiesRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarkingResultVisibilitiesRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{15}
}

type UpdateMarkingResultVisibilitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMarkingResultVisibilitiesResponse) Reset() {
	*x = UpdateMarkingResultVisibilitiesResponse{}
	mi := &file_admin_v1_mark_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMarkingResultVisibilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarkingResultVisibilitiesResponse) ProtoMessage() {}

func (x *UpdateMarkingResultVisibilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_mark_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarkingResultVisibilitiesResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarkingResultVisibilitiesResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_mark_proto_rawDescGZIP(), []int{16}
}

var File_admin_v1_mark_proto protoreflect.FileDescriptor

var file_admin_v1_mark_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9,
	0x02, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x2c, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x27, 0x0a,
	0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xbe, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x05, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x52, 0x09,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x68, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x37, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x62, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x22, 0x5e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0x5e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x5c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5d,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0d,
	0x6d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x28, 0x0a,
	0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0x91, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29,
	0x0a, 0x25, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x41, 0x52,
	0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12,
	0x25, 0x0a, 0x21, 0x4d, 0x41, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32, 0xed, 0x03, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x23,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x24, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x30, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x63, 0x74, 0x73, 0x63, 0x2f, 0x69, 0x63, 0x74, 0x73, 0x63,
	0x2d, 0x72, 0x65, 0x67, 0x61, 0x6c, 0x69, 0x61, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_admin_v1_mark_proto_rawDescOnce sync.Once
	file_admin_v1_mark_proto_rawDescData []byte
)

func file_admin_v1_mark_proto_rawDescGZIP() []byte {
	file_admin_v1_mark_proto_rawDescOnce.Do(func() {
		file_admin_v1_mark_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_v1_mark_proto_rawDesc), len(file_admin_v1_mark_proto_rawDesc)))
	})
	return file_admin_v1_mark_proto_rawDescData
}

var file_admin_v1_mark_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_admin_v1_mark_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_admin_v1_mark_proto_goTypes = []any{
	(MarkingResultVisibility)(0),                    // 0: admin.v1.MarkingResultVisibility
	(*Answer)(nil),                                  // 1: admin.v1.Answer
	(*AnswerBody)(nil),                              // 2: admin.v1.AnswerBody
	(*DescriptiveAnswer)(nil),                       // 3: admin.v1.DescriptiveAnswer
	(*MarkingResult)(nil),                           // 4: admin.v1.MarkingResult
	(*MarkingScore)(nil),                            // 5: admin.v1.MarkingScore
	(*MarkingRationale)(nil),                        // 6: admin.v1.MarkingRationale
	(*DescriptiveMarkingRationale)(nil),             // 7: admin.v1.DescriptiveMarkingRationale
	(*ListAnswersRequest)(nil),                      // 8: admin.v1.ListAnswersRequest
	(*ListAnswersResponse)(nil),                     // 9: admin.v1.ListAnswersResponse
	(*GetAnswerRequest)(nil),                        // 10: admin.v1.GetAnswerRequest
	(*GetAnswerResponse)(nil),                       // 11: admin.v1.GetAnswerResponse
	(*ListMarkingResultsRequest)(nil),               // 12: admin.v1.ListMarkingResultsRequest
	(*ListMarkingResultsResponse)(nil),              // 13: admin.v1.ListMarkingResultsResponse
	(*CreateMarkingResultRequest)(nil),              // 14: admin.v1.CreateMarkingResultRequest
	(*CreateMarkingResultResponse)(nil),             // 15: admin.v1.CreateMarkingResultResponse
	(*UpdateMarkingResultVisibilitiesRequest)(nil),  // 16: admin.v1.UpdateMarkingResultVisibilitiesRequest
	(*UpdateMarkingResultVisibilitiesResponse)(nil), // 17: admin.v1.UpdateMarkingResultVisibilitiesResponse
	(*Team)(nil),                                    // 18: admin.v1.Team
	(*Contestant)(nil),                              // 19: admin.v1.Contestant
	(*Problem)(nil),                                 // 20: admin.v1.Problem
	(*timestamppb.Timestamp)(nil),                   // 21: google.protobuf.Timestamp
	(ProblemType)(0),                                // 22: admin.v1.ProblemType
	(*Admin)(nil),                                   // 23: admin.v1.Admin
}
var file_admin_v1_mark_proto_depIdxs = []int32{
	18, // 0: admin.v1.Answer.team:type_name -> admin.v1.Team
	19, // 1: admin.v1.Answer.author:type_name -> admin.v1.Contestant
	20, // 2: admin.v1.Answer.problem:type_name -> admin.v1.Problem
	2,  // 3: admin.v1.Answer.body:type_name -> admin.v1.AnswerBody
	21, // 4: admin.v1.Answer.created_at:type_name -> google.protobuf.Timestamp
	5,  // 5: admin.v1.Answer.score:type_name -> admin.v1.MarkingScore
	22, // 6: admin.v1.AnswerBody.type:type_name -> admin.v1.ProblemType
	3,  // 7: admin.v1.AnswerBody.descriptive:type_name -> admin.v1.DescriptiveAnswer
	1,  // 8: admin.v1.MarkingResult.answer:type_name -> admin.v1.Answer
	23, // 9: admin.v1.MarkingResult.judge:type_name -> admin.v1.Admin
	6,  // 10: admin.v1.MarkingResult.rationale:type_name -> admin.v1.MarkingRationale
	21, // 11: admin.v1.MarkingResult.created_at:type_name -> google.protobuf.Timestamp
	0,  // 12: admin.v1.MarkingResult.visibility:type_name -> admin.v1.MarkingResultVisibility
	22, // 13: admin.v1.MarkingRationale.type:type_name -> admin.v1.ProblemType
	7,  // 14: admin.v1.MarkingRationale.descriptive:type_name -> admin.v1.DescriptiveMarkingRationale
	1,  // 15: admin.v1.ListAnswersResponse.answers:type_name -> admin.v1.Answer
	1,  // 16: admin.v1.GetAnswerResponse.answer:type_name -> admin.v1.Answer
	0,  // 17: admin.v1.ListMarkingResultsRequest.visibility:type_name -> admin.v1.MarkingResultVisibility
	4,  // 18: admin.v1.ListMarkingResultsResponse.marking_results:type_name -> admin.v1.MarkingResult
	4,  // 19: admin.v1.CreateMarkingResultRequest.marking_result:type_name -> admin.v1.MarkingResult
	4,  // 20: admin.v1.CreateMarkingResultResponse.marking_result:type_name -> admin.v1.MarkingResult
	8,  // 21: admin.v1.MarkService.ListAnswers:input_type -> admin.v1.ListAnswersRequest
	10, // 22: admin.v1.MarkService.GetAnswer:input_type -> admin.v1.GetAnswerRequest
	12, // 23: admin.v1.MarkService.ListMarkingResults:input_type -> admin.v1.ListMarkingResultsRequest
	14, // 24: admin.v1.MarkService.CreateMarkingResult:input_type -> admin.v1.CreateMarkingResultRequest
	16, // 25: admin.v1.MarkService.UpdateMarkingResultVisibilities:input_type -> admin.v1.UpdateMarkingResultVisibilitiesRequest
	9,  // 26: admin.v1.MarkService.ListAnswers:output_type -> admin.v1.ListAnswersResponse
	11, // 27: admin.v1.MarkService.GetAnswer:output_type -> admin.v1.GetAnswerResponse
	13, // 28: admin.v1.MarkService.ListMarkingResults:output_type -> admin.v1.ListMarkingResultsResponse
	15, // 29: admin.v1.MarkService.CreateMarkingResult:output_type -> admin.v1.CreateMarkingResultResponse
	17, // 30: admin.v1.MarkService.UpdateMarkingResultVisibilities:output_type -> admin.v1.UpdateMarkingResultVisibilitiesResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_admin_v1_mark_proto_init() }
func file_admin_v1_mark_proto_init() {
	if File_admin_v1_mark_proto != nil {
		return
	}
	file_admin_v1_actor_proto_init()
	file_admin_v1_contestant_proto_init()
	file_admin_v1_problem_proto_init()
	file_admin_v1_team_proto_init()
	file_admin_v1_mark_proto_msgTypes[0].OneofWrappers = []any{}
	file_admin_v1_mark_proto_msgTypes[1].OneofWrappers = []any{
		(*AnswerBody_Descriptive)(nil),
	}
	file_admin_v1_mark_proto_msgTypes[5].OneofWrappers = []any{
		(*MarkingRationale_Descriptive)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_v1_mark_proto_rawDesc), len(file_admin_v1_mark_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_v1_mark_proto_goTypes,
		DependencyIndexes: file_admin_v1_mark_proto_depIdxs,
		EnumInfos:         file_admin_v1_mark_proto_enumTypes,
		MessageInfos:      file_admin_v1_mark_proto_msgTypes,
	}.Build()
	File_admin_v1_mark_proto = out.File
	file_admin_v1_mark_proto_goTypes = nil
	file_admin_v1_mark_proto_depIdxs = nil
}
