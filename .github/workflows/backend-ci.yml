name: Backend CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

defaults:
  run:
    working-directory: backend

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          go_version_file: backend/go.mod
          workdir: backend
          level: warning
          fail_on_error: true # deprecated
          filter_mode: nofilter
          golangci_lint_flags: --timeout=10m
  generation:
    name: Generation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache: false
      - uses: actions/cache/restore@v4
        id: go-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            go-
      - name: Go Generate
        run: go generate -x ./...
      - name: Check Diff
        run: git diff --exit-code
  test:
    name: Test
    needs: [test-go, test-schema]
    runs-on: ubuntu-latest
    steps:
      - run: echo
  test-go:
    name: Test Go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache: false
      - uses: actions/cache/restore@v4
        id: go-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            go-
      - name: Go Modules
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: go mod download -x
      - name: Run Test
        run: go test -race -shuffle on -parallel 8 -v ./...
      - uses: actions/cache/save@v4
        if: always() && steps.go-cache.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ steps.go-cache.outputs.cache-primary-key }}
  test-schema:
    name: Test Schema
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: ictsc
          POSTGRES_DB: ictscore
        options: >-
          --health-cmd pg-isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: false
      - name: Run Migration
        run: ./scripts/migrate
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: ictsc
          PGPASSWORD: password
          DB_NAME: ictscore
