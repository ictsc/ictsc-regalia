// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file contestant/v1/contest.proto (package contestant.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file contestant/v1/contest.proto.
 */
export const file_contestant_v1_contest: GenFile = /*@__PURE__*/
  fileDesc("Chtjb250ZXN0YW50L3YxL2NvbnRlc3QucHJvdG8SDWNvbnRlc3RhbnQudjEiwwEKCFNjaGVkdWxlEiMKBXBoYXNlGAEgASgOMhQuY29udGVzdGFudC52MS5QaGFzZRIoCgpuZXh0X3BoYXNlGAIgASgOMhQuY29udGVzdGFudC52MS5QaGFzZRIsCghzdGFydF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoGZW5kX2F0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBQgkKB19lbmRfYXQiGAoEUnVsZRIQCghtYXJrZG93bhgBIAEoCSIUChJHZXRTY2hlZHVsZVJlcXVlc3QiQAoTR2V0U2NoZWR1bGVSZXNwb25zZRIpCghzY2hlZHVsZRgBIAEoCzIXLmNvbnRlc3RhbnQudjEuU2NoZWR1bGUiEAoOR2V0UnVsZVJlcXVlc3QiNAoPR2V0UnVsZVJlc3BvbnNlEiEKBHJ1bGUYASABKAsyEy5jb250ZXN0YW50LnYxLlJ1bGUqeAoFUGhhc2USFQoRUEhBU0VfVU5TUEVDSUZJRUQQABIYChRQSEFTRV9PVVRfT0ZfQ09OVEVTVBABEhQKEFBIQVNFX0lOX0NPTlRFU1QQAhIPCgtQSEFTRV9CUkVBSxADEhcKE1BIQVNFX0FGVEVSX0NPTlRFU1QQBDKwAQoOQ29udGVzdFNlcnZpY2USVAoLR2V0U2NoZWR1bGUSIS5jb250ZXN0YW50LnYxLkdldFNjaGVkdWxlUmVxdWVzdBoiLmNvbnRlc3RhbnQudjEuR2V0U2NoZWR1bGVSZXNwb25zZRJICgdHZXRSdWxlEh0uY29udGVzdGFudC52MS5HZXRSdWxlUmVxdWVzdBoeLmNvbnRlc3RhbnQudjEuR2V0UnVsZVJlc3BvbnNlQsMBChFjb20uY29udGVzdGFudC52MUIMQ29udGVzdFByb3RvUAFaS2dpdGh1Yi5jb20vaWN0c2MvaWN0c2MtcmVnYWxpYS9iYWNrZW5kL3BrZy9wcm90by9jb250ZXN0YW50L3YxO2NvbnRlc3RhbnR2MaICA0NYWKoCDUNvbnRlc3RhbnQuVjHKAg1Db250ZXN0YW50XFYx4gIZQ29udGVzdGFudFxWMVxHUEJNZXRhZGF0YeoCDkNvbnRlc3RhbnQ6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message contestant.v1.Schedule
 */
export type Schedule = Message<"contestant.v1.Schedule"> & {
  /**
   * @generated from field: contestant.v1.Phase phase = 1;
   */
  phase: Phase;

  /**
   * @generated from field: contestant.v1.Phase next_phase = 2;
   */
  nextPhase: Phase;

  /**
   * @generated from field: google.protobuf.Timestamp start_at = 3;
   */
  startAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp end_at = 4;
   */
  endAt?: Timestamp;
};

/**
 * Describes the message contestant.v1.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 0);

/**
 * @generated from message contestant.v1.Rule
 */
export type Rule = Message<"contestant.v1.Rule"> & {
  /**
   * @generated from field: string markdown = 1;
   */
  markdown: string;
};

/**
 * Describes the message contestant.v1.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema: GenMessage<Rule> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 1);

/**
 * @generated from message contestant.v1.GetScheduleRequest
 */
export type GetScheduleRequest = Message<"contestant.v1.GetScheduleRequest"> & {
};

/**
 * Describes the message contestant.v1.GetScheduleRequest.
 * Use `create(GetScheduleRequestSchema)` to create a new message.
 */
export const GetScheduleRequestSchema: GenMessage<GetScheduleRequest> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 2);

/**
 * @generated from message contestant.v1.GetScheduleResponse
 */
export type GetScheduleResponse = Message<"contestant.v1.GetScheduleResponse"> & {
  /**
   * @generated from field: contestant.v1.Schedule schedule = 1;
   */
  schedule?: Schedule;
};

/**
 * Describes the message contestant.v1.GetScheduleResponse.
 * Use `create(GetScheduleResponseSchema)` to create a new message.
 */
export const GetScheduleResponseSchema: GenMessage<GetScheduleResponse> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 3);

/**
 * @generated from message contestant.v1.GetRuleRequest
 */
export type GetRuleRequest = Message<"contestant.v1.GetRuleRequest"> & {
};

/**
 * Describes the message contestant.v1.GetRuleRequest.
 * Use `create(GetRuleRequestSchema)` to create a new message.
 */
export const GetRuleRequestSchema: GenMessage<GetRuleRequest> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 4);

/**
 * @generated from message contestant.v1.GetRuleResponse
 */
export type GetRuleResponse = Message<"contestant.v1.GetRuleResponse"> & {
  /**
   * @generated from field: contestant.v1.Rule rule = 1;
   */
  rule?: Rule;
};

/**
 * Describes the message contestant.v1.GetRuleResponse.
 * Use `create(GetRuleResponseSchema)` to create a new message.
 */
export const GetRuleResponseSchema: GenMessage<GetRuleResponse> = /*@__PURE__*/
  messageDesc(file_contestant_v1_contest, 5);

/**
 * @generated from enum contestant.v1.Phase
 */
export enum Phase {
  /**
   * @generated from enum value: PHASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PHASE_OUT_OF_CONTEST = 1;
   */
  OUT_OF_CONTEST = 1,

  /**
   * @generated from enum value: PHASE_IN_CONTEST = 2;
   */
  IN_CONTEST = 2,

  /**
   * @generated from enum value: PHASE_BREAK = 3;
   */
  BREAK = 3,

  /**
   * @generated from enum value: PHASE_AFTER_CONTEST = 4;
   */
  AFTER_CONTEST = 4,
}

/**
 * Describes the enum contestant.v1.Phase.
 */
export const PhaseSchema: GenEnum<Phase> = /*@__PURE__*/
  enumDesc(file_contestant_v1_contest, 0);

/**
 * @generated from service contestant.v1.ContestService
 */
export const ContestService: GenService<{
  /**
   * @generated from rpc contestant.v1.ContestService.GetSchedule
   */
  getSchedule: {
    methodKind: "unary";
    input: typeof GetScheduleRequestSchema;
    output: typeof GetScheduleResponseSchema;
  },
  /**
   * @generated from rpc contestant.v1.ContestService.GetRule
   */
  getRule: {
    methodKind: "unary";
    input: typeof GetRuleRequestSchema;
    output: typeof GetRuleResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_contestant_v1_contest, 0);

