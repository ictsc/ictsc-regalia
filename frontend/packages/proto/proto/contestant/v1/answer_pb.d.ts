// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts"
// @generated from file contestant/v1/answer.proto (package contestant.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import type { ProblemType, Score } from "./problem_pb";

/**
 * Describes the file contestant/v1/answer.proto.
 */
export declare const file_contestant_v1_answer: GenFile;

/**
 * 解答
 *
 * @generated from message contestant.v1.Answer
 */
export declare type Answer = Message<"contestant.v1.Answer"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: contestant.v1.AnswerBody body = 2;
   */
  body?: AnswerBody;

  /**
   * @generated from field: google.protobuf.Timestamp submitted_at = 3;
   */
  submittedAt?: Timestamp;

  /**
   * @generated from field: optional contestant.v1.Score score = 4;
   */
  score?: Score;
};

/**
 * Describes the message contestant.v1.Answer.
 * Use `create(AnswerSchema)` to create a new message.
 */
export declare const AnswerSchema: GenMessage<Answer>;

/**
 * @generated from message contestant.v1.AnswerBody
 */
export declare type AnswerBody = Message<"contestant.v1.AnswerBody"> & {
  /**
   * @generated from field: contestant.v1.ProblemType type = 1;
   */
  type: ProblemType;

  /**
   * @generated from oneof contestant.v1.AnswerBody.body
   */
  body: {
    /**
     * @generated from field: contestant.v1.DescriptiveAnswer descriptive = 2;
     */
    value: DescriptiveAnswer;
    case: "descriptive";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message contestant.v1.AnswerBody.
 * Use `create(AnswerBodySchema)` to create a new message.
 */
export declare const AnswerBodySchema: GenMessage<AnswerBody>;

/**
 * @generated from message contestant.v1.DescriptiveAnswer
 */
export declare type DescriptiveAnswer = Message<"contestant.v1.DescriptiveAnswer"> & {
  /**
   * @generated from field: string body = 1;
   */
  body: string;
};

/**
 * Describes the message contestant.v1.DescriptiveAnswer.
 * Use `create(DescriptiveAnswerSchema)` to create a new message.
 */
export declare const DescriptiveAnswerSchema: GenMessage<DescriptiveAnswer>;

/**
 * @generated from message contestant.v1.ListAnswersRequest
 */
export declare type ListAnswersRequest = Message<"contestant.v1.ListAnswersRequest"> & {
  /**
   * @generated from field: string problem_code = 1;
   */
  problemCode: string;
};

/**
 * Describes the message contestant.v1.ListAnswersRequest.
 * Use `create(ListAnswersRequestSchema)` to create a new message.
 */
export declare const ListAnswersRequestSchema: GenMessage<ListAnswersRequest>;

/**
 * @generated from message contestant.v1.ListAnswersResponse
 */
export declare type ListAnswersResponse = Message<"contestant.v1.ListAnswersResponse"> & {
  /**
   * @generated from field: repeated contestant.v1.Answer answers = 1;
   */
  answers: Answer[];

  /**
   * @generated from field: google.protobuf.Duration submit_interval = 2;
   */
  submitInterval?: Duration;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_submitted_at = 3;
   */
  lastSubmittedAt?: Timestamp;
};

/**
 * Describes the message contestant.v1.ListAnswersResponse.
 * Use `create(ListAnswersResponseSchema)` to create a new message.
 */
export declare const ListAnswersResponseSchema: GenMessage<ListAnswersResponse>;

/**
 * @generated from message contestant.v1.SubmitAnswerRequest
 */
export declare type SubmitAnswerRequest = Message<"contestant.v1.SubmitAnswerRequest"> & {
  /**
   * @generated from field: string problem_code = 1;
   */
  problemCode: string;

  /**
   * @generated from field: string body = 2;
   */
  body: string;
};

/**
 * Describes the message contestant.v1.SubmitAnswerRequest.
 * Use `create(SubmitAnswerRequestSchema)` to create a new message.
 */
export declare const SubmitAnswerRequestSchema: GenMessage<SubmitAnswerRequest>;

/**
 * @generated from message contestant.v1.SubmitAnswerResponse
 */
export declare type SubmitAnswerResponse = Message<"contestant.v1.SubmitAnswerResponse"> & {
  /**
   * @generated from field: contestant.v1.Answer answer = 1;
   */
  answer?: Answer;
};

/**
 * Describes the message contestant.v1.SubmitAnswerResponse.
 * Use `create(SubmitAnswerResponseSchema)` to create a new message.
 */
export declare const SubmitAnswerResponseSchema: GenMessage<SubmitAnswerResponse>;

/**
 * @generated from message contestant.v1.GetAnswerRequest
 */
export declare type GetAnswerRequest = Message<"contestant.v1.GetAnswerRequest"> & {
  /**
   * @generated from field: string problem_code = 1;
   */
  problemCode: string;

  /**
   * @generated from field: uint32 id = 2;
   */
  id: number;
};

/**
 * Describes the message contestant.v1.GetAnswerRequest.
 * Use `create(GetAnswerRequestSchema)` to create a new message.
 */
export declare const GetAnswerRequestSchema: GenMessage<GetAnswerRequest>;

/**
 * @generated from message contestant.v1.GetAnswerResponse
 */
export declare type GetAnswerResponse = Message<"contestant.v1.GetAnswerResponse"> & {
  /**
   * @generated from field: contestant.v1.Answer answer = 1;
   */
  answer?: Answer;
};

/**
 * Describes the message contestant.v1.GetAnswerResponse.
 * Use `create(GetAnswerResponseSchema)` to create a new message.
 */
export declare const GetAnswerResponseSchema: GenMessage<GetAnswerResponse>;

/**
 * @generated from service contestant.v1.AnswerService
 */
export declare const AnswerService: GenService<{
  /**
   * @generated from rpc contestant.v1.AnswerService.ListAnswers
   */
  listAnswers: {
    methodKind: "unary";
    input: typeof ListAnswersRequestSchema;
    output: typeof ListAnswersResponseSchema;
  },
  /**
   * @generated from rpc contestant.v1.AnswerService.SubmitAnswer
   */
  submitAnswer: {
    methodKind: "unary";
    input: typeof SubmitAnswerRequestSchema;
    output: typeof SubmitAnswerResponseSchema;
  },
  /**
   * @generated from rpc contestant.v1.AnswerService.GetAnswer
   */
  getAnswer: {
    methodKind: "unary";
    input: typeof GetAnswerRequestSchema;
    output: typeof GetAnswerResponseSchema;
  },
}>;

