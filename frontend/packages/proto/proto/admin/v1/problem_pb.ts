// @generated by protoc-gen-es v2.1.0 with parameter "target=ts"
// @generated from file admin/v1/problem.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file admin/v1/problem.proto.
 */
export const file_admin_v1_problem: GenFile = /*@__PURE__*/
  fileDesc("ChZhZG1pbi92MS9wcm9ibGVtLnByb3RvEghhZG1pbi52MSI6CgZDaG9pY2USFgoFaW5kZXgYASABKANCB7pIBCICKAASGAoEYm9keRgCIAEoCUIKukgHcgUQARjoByLVAQoIUXVlc3Rpb24SFAoCaWQYASABKAlCCLpIBXIDmAEaEhgKBGJvZHkYAiABKAlCCrpIB3IFEAEY6AcSLgoEdHlwZRgDIAEoDjIWLmFkbWluLnYxLlF1ZXN0aW9uVHlwZUIIukgFggECEAESLQoHY2hvaWNlcxgEIAMoCzIQLmFkbWluLnYxLkNob2ljZUIKukgHkgEECAIQChIWCgVwb2ludBgFIAEoA0IHukgEIgIgABIiCgZhbnN3ZXIYBiADKANCErpID5IBDAgBEAoYASIEIgIoACJyChVNdWx0aXBsZUNob2ljZVByb2JsZW0SHQoEYm9keRgBIAEoCUIKukgHcgUQARjoB0gAiAEBEjEKCXF1ZXN0aW9ucxgCIAMoCzISLmFkbWluLnYxLlF1ZXN0aW9uQgq6SAeSAQQIARAKQgcKBV9ib2R5In8KDkNvbm5lY3Rpb25JbmZvEhsKCGhvc3RuYW1lGAEgASgJQgm6SAZyBBABGGQSGgoHY29tbWFuZBgCIAEoCUIJukgGcgQQARhkEhsKCHBhc3N3b3JkGAMgASgJQgm6SAZyBBABGBQSFwoEdHlwZRgEIAEoCUIJukgGcgQQARgUIooBChJEZXNjcmlwdGl2ZVByb2JsZW0SGAoEYm9keRgBIAEoCUIKukgHcgUQARjoBxI+ChBjb25uZWN0aW9uX2luZm9zGAIgAygLMhguYWRtaW4udjEuQ29ubmVjdGlvbkluZm9CCrpIB5IBBAgAEAoSGgoGYW5zd2VyGAMgASgJQgq6SAdyBRAAGOgHIsECCgdQcm9ibGVtEhQKAmlkGAEgASgJQgi6SAVyA5gBGhIYCgV0aXRsZRgCIAEoCUIJukgGcgQQARhkEhYKBGNvZGUYAyABKAlCCLpIBXIDmAEDEhYKBXBvaW50GAQgASgDQge6SAQiAiAAEi0KBHR5cGUYBSABKA4yFS5hZG1pbi52MS5Qcm9ibGVtVHlwZUIIukgFggECEAESMwoLZGVzY3JpcHRpdmUYBiABKAsyHC5hZG1pbi52MS5EZXNjcmlwdGl2ZVByb2JsZW1IABI6Cg9tdWx0aXBsZV9jaG9pY2UYByABKAsyHy5hZG1pbi52MS5NdWx0aXBsZUNob2ljZVByb2JsZW1IABInCgxhc3NpZ25lZV9pZHMYCCADKAlCEbpIDpIBCwgAEAoiBXIDmAEaQg0KBGJvZHkSBbpIAggBIikKEUdldFByb2JsZW1SZXF1ZXN0EhQKAmlkGAEgASgJQgi6SAVyA5gBGiJAChJHZXRQcm9ibGVtUmVzcG9uc2USKgoHcHJvYmxlbRgBIAEoCzIRLmFkbWluLnYxLlByb2JsZW1CBrpIA8gBASIUChJHZXRQcm9ibGVtc1JlcXVlc3QiQgoTR2V0UHJvYmxlbXNSZXNwb25zZRIrCghwcm9ibGVtcxgBIAMoCzIRLmFkbWluLnYxLlByb2JsZW1CBrpIA8gBASLXAgoTUGF0Y2hQcm9ibGVtUmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOYARoSHQoFdGl0bGUYAiABKAlCCbpIBnIEEAEYZEgBiAEBEhsKBGNvZGUYAyABKAlCCLpIBXIDmAEDSAKIAQESGwoFcG9pbnQYBCABKANCB7pIBCICIABIA4gBARIyCgR0eXBlGAUgASgOMhUuYWRtaW4udjEuUHJvYmxlbVR5cGVCCLpIBYIBAhABSASIAQESMwoLZGVzY3JpcHRpdmUYBiABKAsyHC5hZG1pbi52MS5EZXNjcmlwdGl2ZVByb2JsZW1IABI6Cg9tdWx0aXBsZV9jaG9pY2UYByABKAsyHy5hZG1pbi52MS5NdWx0aXBsZUNob2ljZVByb2JsZW1IAEIGCgRib2R5QggKBl90aXRsZUIHCgVfY29kZUIICgZfcG9pbnRCBwoFX3R5cGUiQgoUUGF0Y2hQcm9ibGVtUmVzcG9uc2USKgoHcHJvYmxlbRgBIAEoCzIRLmFkbWluLnYxLlByb2JsZW1CBrpIA8gBASKNAgoSUG9zdFByb2JsZW1SZXF1ZXN0EhgKBXRpdGxlGAEgASgJQgm6SAZyBBABGGQSFgoEY29kZRgCIAEoCUIIukgFcgOYAQMSFgoFcG9pbnQYAyABKANCB7pIBCICIAASLQoEdHlwZRgEIAEoDjIVLmFkbWluLnYxLlByb2JsZW1UeXBlQgi6SAWCAQIQARIzCgtkZXNjcmlwdGl2ZRgFIAEoCzIcLmFkbWluLnYxLkRlc2NyaXB0aXZlUHJvYmxlbUgAEjoKD211bHRpcGxlX2Nob2ljZRgGIAEoCzIfLmFkbWluLnYxLk11bHRpcGxlQ2hvaWNlUHJvYmxlbUgAQg0KBGJvZHkSBbpIAggBIkEKE1Bvc3RQcm9ibGVtUmVzcG9uc2USKgoHcHJvYmxlbRgBIAEoCzIRLmFkbWluLnYxLlByb2JsZW1CBrpIA8gBASIsChREZWxldGVQcm9ibGVtUmVxdWVzdBIUCgJpZBgBIAEoCUIIukgFcgOYARoiFwoVRGVsZXRlUHJvYmxlbVJlc3BvbnNlKmIKDFF1ZXN0aW9uVHlwZRIdChlRVUVTVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTUVVFU1RJT05fVFlQRV9SQURJTxABEhoKFlFVRVNUSU9OX1RZUEVfQ0hFQ0tCT1gQAiprCgtQcm9ibGVtVHlwZRIcChhQUk9CTEVNX1RZUEVfVU5TUEVDSUZJRUQQABIcChhQUk9CTEVNX1RZUEVfREVTQ1JJUFRJVkUQARIgChxQUk9CTEVNX1RZUEVfTVVMVElQTEVfQ0hPSUNFEAIykgMKDlByb2JsZW1TZXJ2aWNlEkcKCkdldFByb2JsZW0SGy5hZG1pbi52MS5HZXRQcm9ibGVtUmVxdWVzdBocLmFkbWluLnYxLkdldFByb2JsZW1SZXNwb25zZRJKCgtHZXRQcm9ibGVtcxIcLmFkbWluLnYxLkdldFByb2JsZW1zUmVxdWVzdBodLmFkbWluLnYxLkdldFByb2JsZW1zUmVzcG9uc2USTQoMUGF0Y2hQcm9ibGVtEh0uYWRtaW4udjEuUGF0Y2hQcm9ibGVtUmVxdWVzdBoeLmFkbWluLnYxLlBhdGNoUHJvYmxlbVJlc3BvbnNlEkoKC1Bvc3RQcm9ibGVtEhwuYWRtaW4udjEuUG9zdFByb2JsZW1SZXF1ZXN0Gh0uYWRtaW4udjEuUG9zdFByb2JsZW1SZXNwb25zZRJQCg1EZWxldGVQcm9ibGVtEh4uYWRtaW4udjEuRGVsZXRlUHJvYmxlbVJlcXVlc3QaHy5hZG1pbi52MS5EZWxldGVQcm9ibGVtUmVzcG9uc2VCngEKDGNvbS5hZG1pbi52MUIMUHJvYmxlbVByb3RvUAFaP2dpdGh1Yi5jb20vaWN0c2MvaWN0c2Mtb3V0bGFuZHMvYmFja2VuZC9pbnRlcm5hbC9wcm90by9hZG1pbi92MaICA0FYWKoCCEFkbWluLlYxygIIQWRtaW5cVjHiAhRBZG1pblxWMVxHUEJNZXRhZGF0YeoCCUFkbWluOjpWMWIGcHJvdG8z", [file_buf_validate_validate]);

/**
 * @generated from message admin.v1.Choice
 */
export type Choice = Message<"admin.v1.Choice"> & {
  /**
   * @generated from field: int64 index = 1;
   */
  index: bigint;

  /**
   * @generated from field: string body = 2;
   */
  body: string;
};

/**
 * Describes the message admin.v1.Choice.
 * Use `create(ChoiceSchema)` to create a new message.
 */
export const ChoiceSchema: GenMessage<Choice> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 0);

/**
 * @generated from message admin.v1.Question
 */
export type Question = Message<"admin.v1.Question"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string body = 2;
   */
  body: string;

  /**
   * @generated from field: admin.v1.QuestionType type = 3;
   */
  type: QuestionType;

  /**
   * @generated from field: repeated admin.v1.Choice choices = 4;
   */
  choices: Choice[];

  /**
   * @generated from field: int64 point = 5;
   */
  point: bigint;

  /**
   * @generated from field: repeated int64 answer = 6;
   */
  answer: bigint[];
};

/**
 * Describes the message admin.v1.Question.
 * Use `create(QuestionSchema)` to create a new message.
 */
export const QuestionSchema: GenMessage<Question> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 1);

/**
 * @generated from message admin.v1.MultipleChoiceProblem
 */
export type MultipleChoiceProblem = Message<"admin.v1.MultipleChoiceProblem"> & {
  /**
   * @generated from field: optional string body = 1;
   */
  body?: string;

  /**
   * @generated from field: repeated admin.v1.Question questions = 2;
   */
  questions: Question[];
};

/**
 * Describes the message admin.v1.MultipleChoiceProblem.
 * Use `create(MultipleChoiceProblemSchema)` to create a new message.
 */
export const MultipleChoiceProblemSchema: GenMessage<MultipleChoiceProblem> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 2);

/**
 * @generated from message admin.v1.ConnectionInfo
 */
export type ConnectionInfo = Message<"admin.v1.ConnectionInfo"> & {
  /**
   * @generated from field: string hostname = 1;
   */
  hostname: string;

  /**
   * @generated from field: string command = 2;
   */
  command: string;

  /**
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message admin.v1.ConnectionInfo.
 * Use `create(ConnectionInfoSchema)` to create a new message.
 */
export const ConnectionInfoSchema: GenMessage<ConnectionInfo> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 3);

/**
 * @generated from message admin.v1.DescriptiveProblem
 */
export type DescriptiveProblem = Message<"admin.v1.DescriptiveProblem"> & {
  /**
   * @generated from field: string body = 1;
   */
  body: string;

  /**
   * @generated from field: repeated admin.v1.ConnectionInfo connection_infos = 2;
   */
  connectionInfos: ConnectionInfo[];

  /**
   * @generated from field: string answer = 3;
   */
  answer: string;
};

/**
 * Describes the message admin.v1.DescriptiveProblem.
 * Use `create(DescriptiveProblemSchema)` to create a new message.
 */
export const DescriptiveProblemSchema: GenMessage<DescriptiveProblem> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 4);

/**
 * @generated from message admin.v1.Problem
 */
export type Problem = Message<"admin.v1.Problem"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string code = 3;
   */
  code: string;

  /**
   * @generated from field: int64 point = 4;
   */
  point: bigint;

  /**
   * @generated from field: admin.v1.ProblemType type = 5;
   */
  type: ProblemType;

  /**
   * @generated from oneof admin.v1.Problem.body
   */
  body: {
    /**
     * @generated from field: admin.v1.DescriptiveProblem descriptive = 6;
     */
    value: DescriptiveProblem;
    case: "descriptive";
  } | {
    /**
     * @generated from field: admin.v1.MultipleChoiceProblem multiple_choice = 7;
     */
    value: MultipleChoiceProblem;
    case: "multipleChoice";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated string assignee_ids = 8;
   */
  assigneeIds: string[];
};

/**
 * Describes the message admin.v1.Problem.
 * Use `create(ProblemSchema)` to create a new message.
 */
export const ProblemSchema: GenMessage<Problem> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 5);

/**
 * @generated from message admin.v1.GetProblemRequest
 */
export type GetProblemRequest = Message<"admin.v1.GetProblemRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message admin.v1.GetProblemRequest.
 * Use `create(GetProblemRequestSchema)` to create a new message.
 */
export const GetProblemRequestSchema: GenMessage<GetProblemRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 6);

/**
 * @generated from message admin.v1.GetProblemResponse
 */
export type GetProblemResponse = Message<"admin.v1.GetProblemResponse"> & {
  /**
   * @generated from field: admin.v1.Problem problem = 1;
   */
  problem?: Problem;
};

/**
 * Describes the message admin.v1.GetProblemResponse.
 * Use `create(GetProblemResponseSchema)` to create a new message.
 */
export const GetProblemResponseSchema: GenMessage<GetProblemResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 7);

/**
 * @generated from message admin.v1.GetProblemsRequest
 */
export type GetProblemsRequest = Message<"admin.v1.GetProblemsRequest"> & {
};

/**
 * Describes the message admin.v1.GetProblemsRequest.
 * Use `create(GetProblemsRequestSchema)` to create a new message.
 */
export const GetProblemsRequestSchema: GenMessage<GetProblemsRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 8);

/**
 * @generated from message admin.v1.GetProblemsResponse
 */
export type GetProblemsResponse = Message<"admin.v1.GetProblemsResponse"> & {
  /**
   * @generated from field: repeated admin.v1.Problem problems = 1;
   */
  problems: Problem[];
};

/**
 * Describes the message admin.v1.GetProblemsResponse.
 * Use `create(GetProblemsResponseSchema)` to create a new message.
 */
export const GetProblemsResponseSchema: GenMessage<GetProblemsResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 9);

/**
 * @generated from message admin.v1.PatchProblemRequest
 */
export type PatchProblemRequest = Message<"admin.v1.PatchProblemRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title?: string;

  /**
   * @generated from field: optional string code = 3;
   */
  code?: string;

  /**
   * @generated from field: optional int64 point = 4;
   */
  point?: bigint;

  /**
   * @generated from field: optional admin.v1.ProblemType type = 5;
   */
  type?: ProblemType;

  /**
   * @generated from oneof admin.v1.PatchProblemRequest.body
   */
  body: {
    /**
     * @generated from field: admin.v1.DescriptiveProblem descriptive = 6;
     */
    value: DescriptiveProblem;
    case: "descriptive";
  } | {
    /**
     * @generated from field: admin.v1.MultipleChoiceProblem multiple_choice = 7;
     */
    value: MultipleChoiceProblem;
    case: "multipleChoice";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message admin.v1.PatchProblemRequest.
 * Use `create(PatchProblemRequestSchema)` to create a new message.
 */
export const PatchProblemRequestSchema: GenMessage<PatchProblemRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 10);

/**
 * @generated from message admin.v1.PatchProblemResponse
 */
export type PatchProblemResponse = Message<"admin.v1.PatchProblemResponse"> & {
  /**
   * @generated from field: admin.v1.Problem problem = 1;
   */
  problem?: Problem;
};

/**
 * Describes the message admin.v1.PatchProblemResponse.
 * Use `create(PatchProblemResponseSchema)` to create a new message.
 */
export const PatchProblemResponseSchema: GenMessage<PatchProblemResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 11);

/**
 * @generated from message admin.v1.PostProblemRequest
 */
export type PostProblemRequest = Message<"admin.v1.PostProblemRequest"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string code = 2;
   */
  code: string;

  /**
   * @generated from field: int64 point = 3;
   */
  point: bigint;

  /**
   * @generated from field: admin.v1.ProblemType type = 4;
   */
  type: ProblemType;

  /**
   * @generated from oneof admin.v1.PostProblemRequest.body
   */
  body: {
    /**
     * @generated from field: admin.v1.DescriptiveProblem descriptive = 5;
     */
    value: DescriptiveProblem;
    case: "descriptive";
  } | {
    /**
     * @generated from field: admin.v1.MultipleChoiceProblem multiple_choice = 6;
     */
    value: MultipleChoiceProblem;
    case: "multipleChoice";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message admin.v1.PostProblemRequest.
 * Use `create(PostProblemRequestSchema)` to create a new message.
 */
export const PostProblemRequestSchema: GenMessage<PostProblemRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 12);

/**
 * @generated from message admin.v1.PostProblemResponse
 */
export type PostProblemResponse = Message<"admin.v1.PostProblemResponse"> & {
  /**
   * @generated from field: admin.v1.Problem problem = 1;
   */
  problem?: Problem;
};

/**
 * Describes the message admin.v1.PostProblemResponse.
 * Use `create(PostProblemResponseSchema)` to create a new message.
 */
export const PostProblemResponseSchema: GenMessage<PostProblemResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 13);

/**
 * @generated from message admin.v1.DeleteProblemRequest
 */
export type DeleteProblemRequest = Message<"admin.v1.DeleteProblemRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message admin.v1.DeleteProblemRequest.
 * Use `create(DeleteProblemRequestSchema)` to create a new message.
 */
export const DeleteProblemRequestSchema: GenMessage<DeleteProblemRequest> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 14);

/**
 * @generated from message admin.v1.DeleteProblemResponse
 */
export type DeleteProblemResponse = Message<"admin.v1.DeleteProblemResponse"> & {
};

/**
 * Describes the message admin.v1.DeleteProblemResponse.
 * Use `create(DeleteProblemResponseSchema)` to create a new message.
 */
export const DeleteProblemResponseSchema: GenMessage<DeleteProblemResponse> = /*@__PURE__*/
  messageDesc(file_admin_v1_problem, 15);

/**
 * @generated from enum admin.v1.QuestionType
 */
export enum QuestionType {
  /**
   * @generated from enum value: QUESTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: QUESTION_TYPE_RADIO = 1;
   */
  RADIO = 1,

  /**
   * @generated from enum value: QUESTION_TYPE_CHECKBOX = 2;
   */
  CHECKBOX = 2,
}

/**
 * Describes the enum admin.v1.QuestionType.
 */
export const QuestionTypeSchema: GenEnum<QuestionType> = /*@__PURE__*/
  enumDesc(file_admin_v1_problem, 0);

/**
 * @generated from enum admin.v1.ProblemType
 */
export enum ProblemType {
  /**
   * @generated from enum value: PROBLEM_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROBLEM_TYPE_DESCRIPTIVE = 1;
   */
  DESCRIPTIVE = 1,

  /**
   * @generated from enum value: PROBLEM_TYPE_MULTIPLE_CHOICE = 2;
   */
  MULTIPLE_CHOICE = 2,
}

/**
 * Describes the enum admin.v1.ProblemType.
 */
export const ProblemTypeSchema: GenEnum<ProblemType> = /*@__PURE__*/
  enumDesc(file_admin_v1_problem, 1);

/**
 * @generated from service admin.v1.ProblemService
 */
export const ProblemService: GenService<{
  /**
   * @generated from rpc admin.v1.ProblemService.GetProblem
   */
  getProblem: {
    methodKind: "unary";
    input: typeof GetProblemRequestSchema;
    output: typeof GetProblemResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.ProblemService.GetProblems
   */
  getProblems: {
    methodKind: "unary";
    input: typeof GetProblemsRequestSchema;
    output: typeof GetProblemsResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.ProblemService.PatchProblem
   */
  patchProblem: {
    methodKind: "unary";
    input: typeof PatchProblemRequestSchema;
    output: typeof PatchProblemResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.ProblemService.PostProblem
   */
  postProblem: {
    methodKind: "unary";
    input: typeof PostProblemRequestSchema;
    output: typeof PostProblemResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.ProblemService.DeleteProblem
   */
  deleteProblem: {
    methodKind: "unary";
    input: typeof DeleteProblemRequestSchema;
    output: typeof DeleteProblemResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_admin_v1_problem, 0);

