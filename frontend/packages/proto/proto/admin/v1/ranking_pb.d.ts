// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts"
// @generated from file admin/v1/ranking.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Team } from "./team_pb";
import type { Problem } from "./problem_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file admin/v1/ranking.proto.
 */
export declare const file_admin_v1_ranking: GenFile;

/**
 * @generated from message admin.v1.Score
 */
export declare type Score = Message<"admin.v1.Score"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;

  /**
   * @generated from field: admin.v1.Problem problem = 2;
   */
  problem?: Problem;

  /**
   * 採点による得点
   *
   * @generated from field: int64 marked_score = 3;
   */
  markedScore: bigint;

  /**
   * ペナルティによる減点
   *
   * @generated from field: int64 penalty = 4;
   */
  penalty: bigint;

  /**
   * 最終的な得点
   *
   * @generated from field: int64 score = 5;
   */
  score: bigint;
};

/**
 * Describes the message admin.v1.Score.
 * Use `create(ScoreSchema)` to create a new message.
 */
export declare const ScoreSchema: GenMessage<Score>;

/**
 * @generated from message admin.v1.TeamRank
 */
export declare type TeamRank = Message<"admin.v1.TeamRank"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;

  /**
   * @generated from field: int64 rank = 2;
   */
  rank: bigint;

  /**
   * @generated from field: int64 score = 3;
   */
  score: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp last_effective_submission_at = 4;
   */
  lastEffectiveSubmissionAt?: Timestamp;
};

/**
 * Describes the message admin.v1.TeamRank.
 * Use `create(TeamRankSchema)` to create a new message.
 */
export declare const TeamRankSchema: GenMessage<TeamRank>;

/**
 * @generated from message admin.v1.ListScoreRequest
 */
export declare type ListScoreRequest = Message<"admin.v1.ListScoreRequest"> & {
};

/**
 * Describes the message admin.v1.ListScoreRequest.
 * Use `create(ListScoreRequestSchema)` to create a new message.
 */
export declare const ListScoreRequestSchema: GenMessage<ListScoreRequest>;

/**
 * @generated from message admin.v1.ListScoreResponse
 */
export declare type ListScoreResponse = Message<"admin.v1.ListScoreResponse"> & {
  /**
   * @generated from field: repeated admin.v1.Score scores = 1;
   */
  scores: Score[];
};

/**
 * Describes the message admin.v1.ListScoreResponse.
 * Use `create(ListScoreResponseSchema)` to create a new message.
 */
export declare const ListScoreResponseSchema: GenMessage<ListScoreResponse>;

/**
 * @generated from message admin.v1.GetRankingRequest
 */
export declare type GetRankingRequest = Message<"admin.v1.GetRankingRequest"> & {
};

/**
 * Describes the message admin.v1.GetRankingRequest.
 * Use `create(GetRankingRequestSchema)` to create a new message.
 */
export declare const GetRankingRequestSchema: GenMessage<GetRankingRequest>;

/**
 * @generated from message admin.v1.GetRankingResponse
 */
export declare type GetRankingResponse = Message<"admin.v1.GetRankingResponse"> & {
  /**
   * @generated from field: repeated admin.v1.TeamRank ranking = 1;
   */
  ranking: TeamRank[];
};

/**
 * Describes the message admin.v1.GetRankingResponse.
 * Use `create(GetRankingResponseSchema)` to create a new message.
 */
export declare const GetRankingResponseSchema: GenMessage<GetRankingResponse>;

/**
 * @generated from service admin.v1.RankingService
 */
export declare const RankingService: GenService<{
  /**
   * @generated from rpc admin.v1.RankingService.ListScore
   */
  listScore: {
    methodKind: "unary";
    input: typeof ListScoreRequestSchema;
    output: typeof ListScoreResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.RankingService.GetRanking
   */
  getRanking: {
    methodKind: "unary";
    input: typeof GetRankingRequestSchema;
    output: typeof GetRankingResponseSchema;
  },
}>;

