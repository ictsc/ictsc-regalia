// @generated by protoc-gen-es v2.8.0 with parameter "target=js+dts"
// @generated from file admin/v1/deployment.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file admin/v1/deployment.proto.
 */
export declare const file_admin_v1_deployment: GenFile;

/**
 * 問題の展開状態
 *
 * @generated from message admin.v1.Deployment
 */
export declare type Deployment = Message<"admin.v1.Deployment"> & {
  /**
   * チームコード
   *
   * @generated from field: int64 team_code = 1;
   */
  teamCode: bigint;

  /**
   * 問題コード
   *
   * @generated from field: string problem_code = 2;
   */
  problemCode: string;

  /**
   * リビジョン - 0 が初期状態で再展開される度にインクリメントされる
   *
   * @generated from field: int64 revision = 3;
   */
  revision: bigint;

  /**
   * 最新のイベント
   *
   * @generated from field: admin.v1.DeploymentEventType latest_event = 4;
   */
  latestEvent: DeploymentEventType;

  /**
   * イベント
   *
   * @generated from field: repeated admin.v1.DeploymentEvent events = 5;
   */
  events: DeploymentEvent[];
};

/**
 * Describes the message admin.v1.Deployment.
 * Use `create(DeploymentSchema)` to create a new message.
 */
export declare const DeploymentSchema: GenMessage<Deployment>;

/**
 * 問題展開に関するイベント
 *
 * @generated from message admin.v1.DeploymentEvent
 */
export declare type DeploymentEvent = Message<"admin.v1.DeploymentEvent"> & {
  /**
   * @generated from field: google.protobuf.Timestamp occurred_at = 1;
   */
  occurredAt?: Timestamp;

  /**
   * @generated from field: admin.v1.DeploymentEventType type = 2;
   */
  type: DeploymentEventType;
};

/**
 * Describes the message admin.v1.DeploymentEvent.
 * Use `create(DeploymentEventSchema)` to create a new message.
 */
export declare const DeploymentEventSchema: GenMessage<DeploymentEvent>;

/**
 * @generated from message admin.v1.ListDeploymentsRequest
 */
export declare type ListDeploymentsRequest = Message<"admin.v1.ListDeploymentsRequest"> & {
  /**
   * @generated from field: int64 team_code = 1;
   */
  teamCode: bigint;

  /**
   * @generated from field: string problem_code = 2;
   */
  problemCode: string;
};

/**
 * Describes the message admin.v1.ListDeploymentsRequest.
 * Use `create(ListDeploymentsRequestSchema)` to create a new message.
 */
export declare const ListDeploymentsRequestSchema: GenMessage<ListDeploymentsRequest>;

/**
 * @generated from message admin.v1.ListDeploymentsResponse
 */
export declare type ListDeploymentsResponse = Message<"admin.v1.ListDeploymentsResponse"> & {
  /**
   * @generated from field: repeated admin.v1.Deployment deployments = 1;
   */
  deployments: Deployment[];
};

/**
 * Describes the message admin.v1.ListDeploymentsResponse.
 * Use `create(ListDeploymentsResponseSchema)` to create a new message.
 */
export declare const ListDeploymentsResponseSchema: GenMessage<ListDeploymentsResponse>;

/**
 * @generated from message admin.v1.UpdateDeploymentStatusRequest
 */
export declare type UpdateDeploymentStatusRequest = Message<"admin.v1.UpdateDeploymentStatusRequest"> & {
  /**
   * @generated from field: int64 team_code = 1;
   */
  teamCode: bigint;

  /**
   * @generated from field: string problem_code = 2;
   */
  problemCode: string;

  /**
   * @generated from field: uint32 revision = 3;
   */
  revision: number;

  /**
   * @generated from field: admin.v1.DeploymentEventType status = 4;
   */
  status: DeploymentEventType;
};

/**
 * Describes the message admin.v1.UpdateDeploymentStatusRequest.
 * Use `create(UpdateDeploymentStatusRequestSchema)` to create a new message.
 */
export declare const UpdateDeploymentStatusRequestSchema: GenMessage<UpdateDeploymentStatusRequest>;

/**
 * @generated from message admin.v1.UpdateDeploymentStatusResponse
 */
export declare type UpdateDeploymentStatusResponse = Message<"admin.v1.UpdateDeploymentStatusResponse"> & {
};

/**
 * Describes the message admin.v1.UpdateDeploymentStatusResponse.
 * Use `create(UpdateDeploymentStatusResponseSchema)` to create a new message.
 */
export declare const UpdateDeploymentStatusResponseSchema: GenMessage<UpdateDeploymentStatusResponse>;

/**
 * @generated from message admin.v1.SyncDeploymentRequest
 */
export declare type SyncDeploymentRequest = Message<"admin.v1.SyncDeploymentRequest"> & {
  /**
   * @generated from field: int64 team_code = 1;
   */
  teamCode: bigint;

  /**
   * @generated from field: string problem_code = 2;
   */
  problemCode: string;
};

/**
 * Describes the message admin.v1.SyncDeploymentRequest.
 * Use `create(SyncDeploymentRequestSchema)` to create a new message.
 */
export declare const SyncDeploymentRequestSchema: GenMessage<SyncDeploymentRequest>;

/**
 * @generated from message admin.v1.SyncDeploymentResponse
 */
export declare type SyncDeploymentResponse = Message<"admin.v1.SyncDeploymentResponse"> & {
};

/**
 * Describes the message admin.v1.SyncDeploymentResponse.
 * Use `create(SyncDeploymentResponseSchema)` to create a new message.
 */
export declare const SyncDeploymentResponseSchema: GenMessage<SyncDeploymentResponse>;

/**
 * @generated from message admin.v1.DeployRequest
 */
export declare type DeployRequest = Message<"admin.v1.DeployRequest"> & {
  /**
   * @generated from field: int64 team_code = 1;
   */
  teamCode: bigint;

  /**
   * @generated from field: string problem_code = 2;
   */
  problemCode: string;
};

/**
 * Describes the message admin.v1.DeployRequest.
 * Use `create(DeployRequestSchema)` to create a new message.
 */
export declare const DeployRequestSchema: GenMessage<DeployRequest>;

/**
 * @generated from message admin.v1.DeployResponse
 */
export declare type DeployResponse = Message<"admin.v1.DeployResponse"> & {
  /**
   * @generated from field: admin.v1.Deployment deployment = 1;
   */
  deployment?: Deployment;
};

/**
 * Describes the message admin.v1.DeployResponse.
 * Use `create(DeployResponseSchema)` to create a new message.
 */
export declare const DeployResponseSchema: GenMessage<DeployResponse>;

/**
 * @generated from enum admin.v1.DeploymentEventType
 */
export enum DeploymentEventType {
  /**
   * @generated from enum value: DEPLOYMENT_EVENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DEPLOYMENT_EVENT_TYPE_QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: DEPLOYMENT_EVENT_TYPE_CREATING = 2;
   */
  CREATING = 2,

  /**
   * @generated from enum value: DEPLOYMENT_EVENT_TYPE_FINISHED = 3;
   */
  FINISHED = 3,

  /**
   * @generated from enum value: DEPLOYMENT_EVENT_TYPE_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum admin.v1.DeploymentEventType.
 */
export declare const DeploymentEventTypeSchema: GenEnum<DeploymentEventType>;

/**
 * @generated from service admin.v1.DeploymentService
 */
export declare const DeploymentService: GenService<{
  /**
   * @generated from rpc admin.v1.DeploymentService.ListDeployments
   */
  listDeployments: {
    methodKind: "unary";
    input: typeof ListDeploymentsRequestSchema;
    output: typeof ListDeploymentsResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.DeploymentService.UpdateDeploymentStatus
   */
  updateDeploymentStatus: {
    methodKind: "unary";
    input: typeof UpdateDeploymentStatusRequestSchema;
    output: typeof UpdateDeploymentStatusResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.DeploymentService.SyncDeployment
   */
  syncDeployment: {
    methodKind: "unary";
    input: typeof SyncDeploymentRequestSchema;
    output: typeof SyncDeploymentResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.DeploymentService.Deploy
   */
  deploy: {
    methodKind: "unary";
    input: typeof DeployRequestSchema;
    output: typeof DeployResponseSchema;
  },
}>;

