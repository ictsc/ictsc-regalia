// @generated by protoc-gen-es v2.8.0 with parameter "target=js+dts"
// @generated from file admin/v1/team.proto (package admin.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file admin/v1/team.proto.
 */
export declare const file_admin_v1_team: GenFile;

/**
 * @generated from message admin.v1.Team
 */
export declare type Team = Message<"admin.v1.Team"> & {
  /**
   * @generated from field: int64 code = 2;
   */
  code: bigint;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string organization = 4;
   */
  organization: string;

  /**
   * @generated from field: uint32 member_limit = 5;
   */
  memberLimit: number;
};

/**
 * Describes the message admin.v1.Team.
 * Use `create(TeamSchema)` to create a new message.
 */
export declare const TeamSchema: GenMessage<Team>;

/**
 * @generated from message admin.v1.ListTeamsRequest
 */
export declare type ListTeamsRequest = Message<"admin.v1.ListTeamsRequest"> & {
};

/**
 * Describes the message admin.v1.ListTeamsRequest.
 * Use `create(ListTeamsRequestSchema)` to create a new message.
 */
export declare const ListTeamsRequestSchema: GenMessage<ListTeamsRequest>;

/**
 * @generated from message admin.v1.ListTeamsResponse
 */
export declare type ListTeamsResponse = Message<"admin.v1.ListTeamsResponse"> & {
  /**
   * @generated from field: repeated admin.v1.Team teams = 1;
   */
  teams: Team[];
};

/**
 * Describes the message admin.v1.ListTeamsResponse.
 * Use `create(ListTeamsResponseSchema)` to create a new message.
 */
export declare const ListTeamsResponseSchema: GenMessage<ListTeamsResponse>;

/**
 * @generated from message admin.v1.GetTeamRequest
 */
export declare type GetTeamRequest = Message<"admin.v1.GetTeamRequest"> & {
  /**
   * @generated from field: int64 code = 1;
   */
  code: bigint;
};

/**
 * Describes the message admin.v1.GetTeamRequest.
 * Use `create(GetTeamRequestSchema)` to create a new message.
 */
export declare const GetTeamRequestSchema: GenMessage<GetTeamRequest>;

/**
 * @generated from message admin.v1.GetTeamResponse
 */
export declare type GetTeamResponse = Message<"admin.v1.GetTeamResponse"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;
};

/**
 * Describes the message admin.v1.GetTeamResponse.
 * Use `create(GetTeamResponseSchema)` to create a new message.
 */
export declare const GetTeamResponseSchema: GenMessage<GetTeamResponse>;

/**
 * @generated from message admin.v1.CreateTeamRequest
 */
export declare type CreateTeamRequest = Message<"admin.v1.CreateTeamRequest"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;
};

/**
 * Describes the message admin.v1.CreateTeamRequest.
 * Use `create(CreateTeamRequestSchema)` to create a new message.
 */
export declare const CreateTeamRequestSchema: GenMessage<CreateTeamRequest>;

/**
 * @generated from message admin.v1.CreateTeamResponse
 */
export declare type CreateTeamResponse = Message<"admin.v1.CreateTeamResponse"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;
};

/**
 * Describes the message admin.v1.CreateTeamResponse.
 * Use `create(CreateTeamResponseSchema)` to create a new message.
 */
export declare const CreateTeamResponseSchema: GenMessage<CreateTeamResponse>;

/**
 * @generated from message admin.v1.UpdateTeamRequest
 */
export declare type UpdateTeamRequest = Message<"admin.v1.UpdateTeamRequest"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message admin.v1.UpdateTeamRequest.
 * Use `create(UpdateTeamRequestSchema)` to create a new message.
 */
export declare const UpdateTeamRequestSchema: GenMessage<UpdateTeamRequest>;

/**
 * @generated from message admin.v1.UpdateTeamResponse
 */
export declare type UpdateTeamResponse = Message<"admin.v1.UpdateTeamResponse"> & {
  /**
   * @generated from field: admin.v1.Team team = 1;
   */
  team?: Team;
};

/**
 * Describes the message admin.v1.UpdateTeamResponse.
 * Use `create(UpdateTeamResponseSchema)` to create a new message.
 */
export declare const UpdateTeamResponseSchema: GenMessage<UpdateTeamResponse>;

/**
 * @generated from message admin.v1.DeleteTeamRequest
 */
export declare type DeleteTeamRequest = Message<"admin.v1.DeleteTeamRequest"> & {
  /**
   * @generated from field: int64 code = 1;
   */
  code: bigint;
};

/**
 * Describes the message admin.v1.DeleteTeamRequest.
 * Use `create(DeleteTeamRequestSchema)` to create a new message.
 */
export declare const DeleteTeamRequestSchema: GenMessage<DeleteTeamRequest>;

/**
 * @generated from message admin.v1.DeleteTeamResponse
 */
export declare type DeleteTeamResponse = Message<"admin.v1.DeleteTeamResponse"> & {
};

/**
 * Describes the message admin.v1.DeleteTeamResponse.
 * Use `create(DeleteTeamResponseSchema)` to create a new message.
 */
export declare const DeleteTeamResponseSchema: GenMessage<DeleteTeamResponse>;

/**
 * @generated from service admin.v1.TeamService
 */
export declare const TeamService: GenService<{
  /**
   * @generated from rpc admin.v1.TeamService.ListTeams
   */
  listTeams: {
    methodKind: "unary";
    input: typeof ListTeamsRequestSchema;
    output: typeof ListTeamsResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.TeamService.GetTeam
   */
  getTeam: {
    methodKind: "unary";
    input: typeof GetTeamRequestSchema;
    output: typeof GetTeamResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.TeamService.CreateTeam
   */
  createTeam: {
    methodKind: "unary";
    input: typeof CreateTeamRequestSchema;
    output: typeof CreateTeamResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.TeamService.UpdateTeam
   */
  updateTeam: {
    methodKind: "unary";
    input: typeof UpdateTeamRequestSchema;
    output: typeof UpdateTeamResponseSchema;
  },
  /**
   * @generated from rpc admin.v1.TeamService.DeleteTeam
   */
  deleteTeam: {
    methodKind: "unary";
    input: typeof DeleteTeamRequestSchema;
    output: typeof DeleteTeamResponseSchema;
  },
}>;

