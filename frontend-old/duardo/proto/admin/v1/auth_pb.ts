// @generated by protoc-gen-es v1.7.2 with parameter "target=ts,import_extension=none"
// @generated from file admin/v1/auth.proto (package admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message admin.v1.GetCallbackRequest
 */
export class GetCallbackRequest extends Message<GetCallbackRequest> {
  constructor(data?: PartialMessage<GetCallbackRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.GetCallbackRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCallbackRequest {
    return new GetCallbackRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCallbackRequest {
    return new GetCallbackRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCallbackRequest {
    return new GetCallbackRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetCallbackRequest | PlainMessage<GetCallbackRequest> | undefined, b: GetCallbackRequest | PlainMessage<GetCallbackRequest> | undefined): boolean {
    return proto3.util.equals(GetCallbackRequest, a, b);
  }
}

/**
 * @generated from message admin.v1.GetCallbackResponse
 */
export class GetCallbackResponse extends Message<GetCallbackResponse> {
  /**
   * @generated from field: string redirect_uri = 1;
   */
  redirectUri = "";

  constructor(data?: PartialMessage<GetCallbackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.GetCallbackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCallbackResponse {
    return new GetCallbackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCallbackResponse {
    return new GetCallbackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCallbackResponse {
    return new GetCallbackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetCallbackResponse | PlainMessage<GetCallbackResponse> | undefined, b: GetCallbackResponse | PlainMessage<GetCallbackResponse> | undefined): boolean {
    return proto3.util.equals(GetCallbackResponse, a, b);
  }
}

/**
 * @generated from message admin.v1.PostCodeRequest
 */
export class PostCodeRequest extends Message<PostCodeRequest> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  constructor(data?: PartialMessage<PostCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.PostCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostCodeRequest {
    return new PostCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostCodeRequest {
    return new PostCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostCodeRequest {
    return new PostCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PostCodeRequest | PlainMessage<PostCodeRequest> | undefined, b: PostCodeRequest | PlainMessage<PostCodeRequest> | undefined): boolean {
    return proto3.util.equals(PostCodeRequest, a, b);
  }
}

/**
 * @generated from message admin.v1.PostCodeResponse
 */
export class PostCodeResponse extends Message<PostCodeResponse> {
  constructor(data?: PartialMessage<PostCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "admin.v1.PostCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostCodeResponse {
    return new PostCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostCodeResponse {
    return new PostCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostCodeResponse {
    return new PostCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PostCodeResponse | PlainMessage<PostCodeResponse> | undefined, b: PostCodeResponse | PlainMessage<PostCodeResponse> | undefined): boolean {
    return proto3.util.equals(PostCodeResponse, a, b);
  }
}

